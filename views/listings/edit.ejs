<% layout("/layouts/boilerplate") %>
<div class="container">
    <div class="row mt-3">
        <div class="col-8 offset-2">
            <h2>Edit your Listing</h2>
            <form id="listingForm" method="POST" action="/listings/<%= listing._id %>?_method=PUT" novalidate enctype="multipart/form-data">
                <div class="mb-3">
                    <label for="title" class="form-label">Title</label>
                    <input name="listing[title]" id="title" value="<%= listing.title %>" type="text" class="form-control" required/>
                    <div class="invalid-feedback">Please fill in this field.</div>
                    <div class="valid-feedback">Looks good!</div>
                </div>
                <div class="mb-3">
                    <label for="description" class="form-label">Description</label>
                    <textarea name="listing[description]" id="description" class="form-control" required><%= listing.description %></textarea>
                    <div class="invalid-feedback">Please fill in this field.</div>
                    <div class="valid-feedback">Looks good!</div>
                </div>
                <div class="mb-3">
                    <h3>Original Listing Image</h3><br/>
                    <img src="<%= originalImageUrl %>"/>
                </div>
                <div class="mb-3">
                    <label for="image" class="form-label">Upload new Image</label>
                    <input name="listing[image]" id="image"  type="file" class="form-control"/>
                    <div class="invalid-feedback">Please fill in this field.</div>
                    <div class="valid-feedback">Looks good!</div>
                </div>
                <div class="row">
                    <div class="mb-3 col-md-4">
                        <label for="price" class="form-label">Price</label>
                        <input name="listing[price]" id="price" value="<%= listing.price %>" type="number" class="form-control" required/>
                        <div class="invalid-feedback">Please fill in this field.</div>
                        <div class="valid-feedback">Looks good!</div>
                    </div>
                    <div class="mb-3 col-md-8">
                        <label for="country" class="form-label">Country</label>
                        <input name="listing[country]" id="country" value="<%= listing.country %>" type="text" class="form-control" required/>
                        <div class="invalid-feedback">Please fill in this field.</div>
                        <div class="valid-feedback">Looks good!</div>
                    </div>
                </div>
                <div class="mb-3">
                    <label for="location" class="form-label">Location</label>
                    <input name="listing[location]" id="location" value="<%= listing.location %>" class="form-control" required/>
                    <div class="invalid-feedback">Please fill in this field.</div>
                    <div class="valid-feedback">Looks good!</div>
                </div>
                <button id="submitButton" type="submit" class="btn btn-dark edit-btn mt-3">Update</button>
            </form>
        </div>
    </div>
</div>

<script>
    // JavaScript for custom validation
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.getElementById('listingForm');

        form.addEventListener('submit', function(event) {
            // Check if the form is valid
            if (!form.checkValidity()) {
                event.preventDefault(); // Prevent form submission
                event.stopPropagation(); // Stop event propagation
            }

            // Add 'was-validated' class to enable Bootstrap's styling for invalid fields
            form.classList.add('was-validated');

            // Check each input for validity and display warning if empty
            const inputs = form.querySelectorAll('input[required], textarea[required]');
            inputs.forEach(function(input) {
                if (!input.value.trim()) {
                    input.classList.add('is-invalid');
                } else {
                    input.classList.remove('is-invalid');
                }
            });
        });

        // Reset validation status when inputs change
        form.addEventListener('input', function() {
            const inputs = form.querySelectorAll('input[required], textarea[required]');
            inputs.forEach(function(input) {
                input.classList.remove('is-invalid');
            });
        });
    });
</script>
